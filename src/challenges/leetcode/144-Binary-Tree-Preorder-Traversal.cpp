////////////////////////////////////////////////////////////////////////////////
// c++ libraries
////////////////////////////////////////////////////////////////////////////////

#include <algorithm>
#include <iostream>
#include <map>
#include <vector>
#include <utility>

////////////////////////////////////////////////////////////////////////////////
// Personal Helpers
////////////////////////////////////////////////////////////////////////////////

#include "TreeNode.h"

////////////////////////////////////////////////////////////////////////////////
// Solution
////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
  void lookNode(TreeNode* root, std::vector<int>& list){
    if(root == nullptr) return;
    list.push_back(root->val);
    lookNode(root->left, list);
    lookNode(root->right, list);
  }

  std::vector<int> preorderTraversal(TreeNode* root) {
    std::vector<int> output;
    lookNode(root, output);
    return output;
  }
};